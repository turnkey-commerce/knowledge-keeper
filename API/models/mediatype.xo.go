// Package models contains the types for schema 'public'.
package models

// Code generated by xo. DO NOT EDIT.

import (
	"database/sql/driver"
	"errors"
)

// MediaType is the 'media_type' enum type from schema 'public'.
type MediaType uint16

const (
	// MediaTypeLink is the 'link' MediaType.
	MediaTypeLink = MediaType(1)

	// MediaTypeImage is the 'image' MediaType.
	MediaTypeImage = MediaType(2)

	// MediaTypeVideo is the 'video' MediaType.
	MediaTypeVideo = MediaType(3)
)

// String returns the string value of the MediaType.
func (mt MediaType) String() string {
	var enumVal string

	switch mt {
	case MediaTypeLink:
		enumVal = "link"

	case MediaTypeImage:
		enumVal = "image"

	case MediaTypeVideo:
		enumVal = "video"
	}

	return enumVal
}

// MarshalText marshals MediaType into text.
func (mt MediaType) MarshalText() ([]byte, error) {
	return []byte(mt.String()), nil
}

// UnmarshalText unmarshals MediaType from text.
func (mt *MediaType) UnmarshalText(text []byte) error {
	switch string(text) {
	case "link":
		*mt = MediaTypeLink

	case "image":
		*mt = MediaTypeImage

	case "video":
		*mt = MediaTypeVideo

	default:
		return errors.New("invalid MediaType")
	}

	return nil
}

// Value satisfies the sql/driver.Valuer interface for MediaType.
func (mt MediaType) Value() (driver.Value, error) {
	return mt.String(), nil
}

// Scan satisfies the database/sql.Scanner interface for MediaType.
func (mt *MediaType) Scan(src interface{}) error {
	buf, ok := src.([]byte)
	if !ok {
		return errors.New("invalid MediaType")
	}

	return mt.UnmarshalText(buf)
}
